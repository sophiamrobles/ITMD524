{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ab013d34-78ea-45d0-b0ec-acffa97ade68",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.metrics import classification_report, roc_auc_score\n",
    "\n",
    "# load preprocessed data\n",
    "\n",
    "train_df = pd.read_csv('data/HI_Small_Trans.csv') \n",
    "test_df  = pd.read_csv('data/LI_Small_Trans.csv')  \n",
    "\n",
    "# separate features (X) and target (y)\n",
    "\n",
    "X_train = train_df.drop('isLaundering', axis=1)\n",
    "y_train = train_df['isLaundering']\n",
    "\n",
    "X_test  = test_df.drop('isLaundering', axis=1)\n",
    "y_test  = test_df['isLaundering']\n",
    "\n",
    "# train & evaluate knn for k = 3, 5, 7\n",
    "\n",
    "print(\"K-Nearest Neighbors Results\")\n",
    "for k in [3, 5, 7]:\n",
    "    knn = KNeighborsClassifier(n_neighbors=k, n_jobs=-1)\n",
    "    knn.fit(X_train, y_train)\n",
    "    y_pred = knn.predict(X_test)\n",
    "    y_proba = knn.predict_proba(X_test)[:, 1]\n",
    "\n",
    "    print(f\"--- KNN (k={k}) ---\")\n",
    "    print(classification_report(y_test, y_pred))\n",
    "    print(f\"ROC-AUC Score: {roc_auc_score(y_test, y_proba):.4f}\")\n",
    "    print(\"-\" * 40)\n",
    "\n",
    "# train & evaluate knn \n",
    "\n",
    "print(\"Gaussian Naive Bayes Results\")\n",
    "gnb = GaussianNB()\n",
    "gnb.fit(X_train, y_train)\n",
    "y_pred_nb = gnb.predict(X_test)\n",
    "y_proba_nb = gnb.predict_proba(X_test)[:, 1]\n",
    "\n",
    "print(\"Gaussian Naive Bayes\")\n",
    "print(classification_report(y_test, y_pred_nb))\n",
    "print(f\"ROC-AUC Score: {roc_auc_score(y_test, y_proba_nb):.4f}\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
